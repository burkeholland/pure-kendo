{
  "name": "grunt-browserify",
  "description": "Grunt task for node-browserify",
  "version": "1.0.2",
  "homepage": "https://github.com/jmreidy/grunt-browserify",
  "contributors": [
    {
      "name": "Justin Reidy",
      "email": "jmreidy@rzrsharp.net"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jmreidy/grunt-browserify.git"
  },
  "bugs": {
    "url": "https://github.com/jmreidy/grunt-browserify/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jmreidy/grunt-browserify/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "engines": {
    "node": ">= 0.8.x"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "browserify": "~2.12.0",
    "browserify-shim": "~2.0.3"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "0.1.x",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "jsdom": "~0.6.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "browserify",
    "grunt"
  ],
  "readme": "[![build status](https://secure.travis-ci.org/jmreidy/grunt-browserify.png)](http://travis-ci.org/jmreidy/grunt-browserify)\n# grunt-browserify\n\nGrunt task for node-browserify. Current version: 1.0.0.\n\n## Getting Started\nThis plugin requires [Grunt](https://gruntjs.com) `~0.4.0` and Node `>=0.10.x`.\n\nInstall this grunt plugin with:\n\n```shell\nnpm install grunt-browserify --save-dev\n```\n\nThen add this line to your project's `grunt.js` Gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-browserify');\n```\n\n\n\n## Documentation\nRun this task with the `grunt browserify` command. As with other Grunt plugins, the `src` and `dest` properties are most important: `src` will use the Grunt glob pattern to specify files for inclusion in the browserified package, and `dest` will specify the outfile for the compiled module.\n\n### Options\n#### ignore\nType: `[String]`\n\nSpecifies files to be ignored in the browserify bundle.\n\n#### alias\nType: `[String:String]` or comma-separated `String`\n\nBrowserify can alias files to a certain name. For example, `require(‘./foo’)` can be aliased to be used as `require(‘foo’)`. Aliases should be specified as `fileName:alias`.\n\n#### external\nType: `[String]`\n\nSpecifies files to be loaded from a previously loaded, “common” bundle.\n\n#### externalize\nType: `[String]`\n\nSpecifies modules(s) to be exposed outside of a bundle, which is necessary for building \"common\" bundles which can be loaded via the `external` option above. Basically, it's a list of files which are supplied to browserify via its `require` or `-r` command.\n\n#### transform\nType: `[String || Function]`\n\nSpecifies a pipeline of functions (or modules) through which the browserified bundle will be run. The [browserify docs themselves](https://github.com/substack/node-browserify#btransformtr) explain transform well, but below is an example of transform used with `grunt-browserify` to automatically compile coffeescript files for use in a bundle:\n\n```javascript\nbrowserify: {\n  'build/module.js': ['client/scripts/**/*.js', 'client/scripts/**/*.coffee'],\n  options: {\n    transform: ['coffeeify']\n  }\n}\n```\n\n#### debug\nType: `Boolean`\n\nEnable source map support.\n\n#### shim\nType: `Object`\n\nProvide a config object to be used with [browserify-shim](https://github.com/thlorenz/browserify-shim)\n\n###Usage\nTo get things running, add the following entry to `grunt.initConfig()`:\n\n```javascript\nbrowserify: {\n  'build/module.js': ['client/scripts/**/*.js']\n}\n```\nMore complicated use cases can be found within this projects own `Gruntfile`.\n\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using `grunt`.\n\n## Release History\n\n### v0.1.0\n  - Initial release\n\n### v0.1.1\n  - Properly support compact and full grunt task syntax\n\n### v0.2.0\n  - Add support for Browserify 2\n\n### v0.2.4\n  - Add externalize option, to expose modules to external bundles\n  - Add browserify-shim support\n  - Completely rewrote and significantly improved tests\n  - Various fixes\n### v0.2.5\n  - Update externalize to expose npm modules to external bundles\n\n### v1.0.0\n  - Really should've been released at v0.2, but better late than never!\n\n### v1.0.2\n  - Move away from browserify-stream to callback approach\n\n## License\nCopyright (c) 2013 Justin Reidy\nLicensed under the MIT license.\n\n\n\n",
  "_id": "grunt-browserify@1.0.2",
  "_from": "grunt-browserify"
}
